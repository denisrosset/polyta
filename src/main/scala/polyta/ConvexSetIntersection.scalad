package com.faacets
package polyta

import scala.{specialized => sp}

import spire.algebra._
import qalg.algebra._

case class ConvexSetIntersection[M, V, @sp(Double) A](sets: Iterable[ConvexSet[M, V, A]])(implicit val MV: MatVecInField[M, V, A]) extends ConvexSet[M, V, A] {
  require(sets.nonEmpty)
  val nX: Int = sets.head.nX
  require(sets.forall(_.nX == nX))
}
